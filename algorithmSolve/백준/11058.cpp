#include <iostream>

using namespace std;

// 풀이.
// 간단한 DP 문제인데 너무 어렵게 생각했다. 최소값이 인덱스 번호값과 동일하기 때문에 초기화할때 쓰면 된다.
// dp[i]가 i번 눌렀을때의 최대값이라고 가정한다면 dp[i - 3] * 2, dp[i - 4] * 3....dp[i - K] * K - 1까지
// 올라가면 된다. 이것을 for문으로 구현하면 되는데 '이 많은걸 어떻게 구한담'하고 넘겼었다.
// 정신차리자.

// 자세한 설명은 주석으로 남긴다.

long long dp[101];

int main()
{
    int N;
    cin >> N;

    for (int i = 1; i <= N; ++i)
    {
        // 최소값은 인덱스 번호와 일치하며, 기존값에서 단순히 A 하나를 늘리는 것일수도 있다.
        dp[i] = dp[i - 1] + 1;
        // 복사하는데 3턴이 걸리기 때문에 3부터 순회하며 1번째 원소값까지 순회하며 최대값을 찾는다.
        for (int j = 3; j < i; ++j)
            dp[i] = max(dp[i], dp[i - j] * (j - 1));
    }
    cout << dp[N] << '\n';
    return 0;
}