#include <iostream>

using namespace std;

// 17427번의 더 나은 풀이.
// 예를 들어 1부터 5까지의 합을 구한다고 치면 모든 수들의 등장 횟수는 다음과 같다.

// 1 - 1.
// 2 - 1, 2.
// 3 - 1, 3.
// 4 - 1, 2, 4.
// 5 - 1, 5.
// 결과
// 1 - 5, 2 - 2, 3 - 1, 4 - 1, 5 - 1.

// 즉, N을 현재수 i로 나눈만큼 등장하게 된다. 결국 점화식은 다음과 같아진다.
// for(int i = 1; i <= N; ++i)
//   총값 += (N / i) * i;
// 여기서 처음에는 N * i / i와 다를바 없기에 결국엔 N이 아닌가 싶지만
// 정수의 나눗셈이기 때문에 그 값이 달라질수 있다.

// 자세한 설명은 주석으로 남긴다.

int N;

int main()
{
    cin >> N;
    long long answer = 0;
    // 상술한 점화식에 의해 복잡한 연산들이 사라진다.
    for (int i = 1; i <= N; ++i)
        answer += (N / i) * i;
    cout << answer << '\n';
    return 0;
}