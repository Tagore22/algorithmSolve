#include <iostream>

using namespace std;

int N;

// 2018번의 더 빠른 풀이.
// 다른 사람들의 풀이를 보니 0ms이라서 결국 힌트를 보았다. 투포인터였고 그렇게 풀어보았다.
// 처음에는 양끝에서 시작하는 것을 구상하였는데 아무리 생각해도 이상했다. 하지만 잘못된 생각이었고
// 양끝에서 시작하는 것은 두 포인터의 합이라던가 그럴때였다. 이번 같은 경우는 모두 왼쪽에서 시작한다.
// 두 포인터 범위내 값들이 더 커져야한다면 to를 오른쪽으로 증가시키고 작아져야한다면 from을 왼쪽으로 이동시킨다면
// 딱 들어맞았다. 한가지 실수를 할뻔했는데 두 포인터의 합의 초기값이었다. 2로 시작했었는데 그렇지 않고 1로 해야한다.
// 겹치게 시작해야하기 때문이다.

int main()
{
    cin >> N;
    // 범위내의 합 cur은 2가 아닌 1로 초기화되야함에 주의.
    int answer = 0, from = 1, to = 1, cur = 1;
    // from이 to보다 작거나 to가 N보다 작거나 같은 동안 반복한다.
    while (from <= to && to <= N)
    {
        // 만약 합이 N보다 작다면 더 커져야하므로 범위값을 늘리기 위해 to를 증가시킨다.
        if (cur < N)
        {
            ++to;
            cur += to;
        }
        // 만약 합이 N보다 크다면 더 작아져야하므로 범위값을 늘리기 위해 from를 감소시킨다.
        else if (cur > N)
        {
            cur -= from;
            ++from;
        }
        // 합이 N이라면 최종값 answer를 1 증가시킨후 범위를 줄여본다.
        else
        {
            ++answer;
            cur -= from;
            ++from;
        }
    }
    cout << answer << '\n';
    return 0;
}