#include <iostream>

using namespace std;

// 풀이.
// 오랜만에 엄청 예쁘게 풀었다. 14등 풀이이다. 흐뭇하다.
// 이 문제에서 중요한건 시간이다. 이미 한 문자쌍이 맞지 않아 유사회문인지 확인할때가 중요한데
// 이때 주먹구구식으로 한 문자를 제외하고 모든 경우를 찾게 되면 주어지는 문자열의 길이가 최대 10만이기에
// 최대 100억 가까이의 연산량이 필요하다. 이래서 정답 비율이 30퍼센트도 안되는것 같다. 아래 풀이에는
// 다음과 같은 원리를 이용하였다.

// 1. 함수는 3개의 매개변수를 가진다. 범위의 시작값, 범위의 마지막값, 이번이 처음 비교하는지에 대한 bool값이다.
// 2. str[from]과 str[to]가 다를때 둘중 하나를 제외하며 반환할값에 1을 더하고 bool값이 false가 되면 다시 호출한다.
// 3. 두번째에서도 다른 쌍이 존재한다면 그냥 1을 반환한다. 만약 마지막까지 모든 쌍이 일치한다면 0을 반환한다.

// 이로써 문자열의 길이가 10만이여도 하나의 문자열 탐색에 최대 20만밖에 시간이 걸리지 않는다.
// 오늘은 머리를 잘쓴것 같다.

// 자세한 설명은 주석으로 남긴다.

string str;
int T;

// 회문과 유사회문을 하나의 함수로 탐색한다.
// 양끝에서 길이 / 2까지 탐색하되, 대응되는 두 문자가 2번 이상 다르다면
// 0을 반환하고 1번이면 1을 반환한다. 
// 탐색시 처음 틀렸다면 두 문자를 한번씩 제외한 상태로 2번으로 나눈다.

// 문자열이 회문인지 혹은 유사회문인지 확인하는 함수.
int FindPal(int from, int to, bool isfirst)
{
    // 별일 없이 모든 문자쌍이 일치할 경우 회문임을 알리는 0을 출력하기에
    // 초기화값은 0이 된다.
    int ans = 0;
    // str.size() / 2 이전까지 모든 문자쌍을 검색하므로 from < to를 조건문으로 내걸면 된다.
    while (from < to)
    {
        // 만약 어떠한 문자쌍이 일치하지 않을 경우.
        if (str[from] != str[to])
        {
            // 이번이 첫번째 탐색이라면 각각 한문자씩을 str에서 제외한후 다시 검색한다.
            if (isfirst)
            {
                // 여기가 중요한데 이 이후 제외한 상태에서 회문이 된다하여도 현재 문자열을 유사회문이기에 1이 되어야 한다.
                // 따라서 1을 더해준다. 이 이후에도 문자쌍이 일치하지 않을 경우 1이 반환되어 현재 문자열은 2, 즉 일반 문자열이 된다.
                ans = FindPal(from + 1, to, false) + 1;
                ans = min(ans, FindPal(from, to - 1, false) + 1);
                return ans;
            }
            // 두번째 탐색에서도 일치하지 않는 문자쌍이 존재할 경우 현재 문자열은 일반 문자열이 되어 2를 반환해야 한다.
            // 따라서 그냥 1을 반환하고 만다.
            else
            {
                return 1;
            }
        }
        // 문자쌍이 일치할 경우 다음으로 넘어간다.
        ++from;
        --to;
    }
    // 모든 문자쌍이 일치할 경우 0을 반환한다. 이때 처음 탐색이었다면 0을 반환하여 회문이 되고,
    // 두번째 탐색이었다면 현재 0과 이전 함수에서의 1이 더해져 유사회문이 된다.
    return ans;
}

void MakeAnswer()
{
    for (int iter = 0; iter < T; ++iter)
    {
        cin >> str;
        cout << FindPal(0, str.size() - 1, true) << '\n';
    }
}

void Input()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    cin >> T;
}

int main()
{
    Input();
    MakeAnswer();
    return 0;
}